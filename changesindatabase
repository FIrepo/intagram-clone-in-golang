
ALTER TABLE public.user_master
    ADD COLUMN username character varying COLLATE pg_catalog."default" DEFAULT ''::character varying;

ALTER TABLE public.user_master
    ADD UNIQUE (username);

ALTER TABLE public.user_master
    ADD UNIQUE (country_code, mobile_no);




CREATE TABLE public.post
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    caption character varying,
    latitude double precision,
    longitude double precision,
    post_path character varying,
    created_at bigint NOT NULL DEFAULT date_part('epoch'::text, now()) * (1000)::double precision,
    updated_at bigint NOT NULL DEFAULT date_part('epoch'::text, now()) * (1000)::double precision,
    PRIMARY KEY (id),
    FOREIGN KEY (user_id)
        REFERENCES public.user_master (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
);

ALTER TABLE public.post
    OWNER to postgres;


    CREATE TABLE public.comments
(
    id serial NOT NULL,
    comment character varying NOT NULL,
    post_id integer NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (post_id)
        REFERENCES public.post (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
);

ALTER TABLE public.comments
    OWNER to postgres;



CREATE TABLE public.hashtags
(
    id serial NOT NULL,
    hashtag character varying NOT NULL,
    post_id integer NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (post_id)
        REFERENCES public.post (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
);

ALTER TABLE public.hashtags
    OWNER to postgres;





CREATE TABLE public.followers
(
    id serial NOT NULL,
    follower_id integer NOT NULL,
    created_at bigint NOT NULL DEFAULT date_part('epoch'::text, now()) * (1000)::double precision,
    user_id integer NOT NULL,
    reject_accept_key integer DEFAULT 0,
    PRIMARY KEY (id),
    FOREIGN KEY (follower_id)
        REFERENCES public.user_master (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    FOREIGN KEY (user_id)
        REFERENCES public.user_master (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
);

ALTER TABLE public.followers
    OWNER to postgres;

COMMENT ON COLUMN public.followers.reject_accept_key
    IS '0-pending 
1-accept
2-denyed';


CREATE TABLE public.following
(
    id serial NOT NULL,
    following_id integer,
    user_id integer,
    created_at bigint NOT NULL DEFAULT date_part('epoch'::text, now()) * (1000)::double precision,
    reject_accept_key boolean DEFAULT false,
    PRIMARY KEY (id),
    FOREIGN KEY (following_id)
        REFERENCES public.user_master (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    FOREIGN KEY (user_id)
        REFERENCES public.user_master (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
);

ALTER TABLE public.following
    OWNER to postgres;